// ****************************************************************************** 
// Copyright     :  Copyright (C) 2018, Hisilicon Technologies Co. Ltd.
// File name     :  ts_sysctrl_reg_offset.h
// Department    :  CAD Development Department
// Author        : huawei
// Version       :  1.0
// Date          :  2013/3/10
// Description   :  The description of xxx project
// Others        :  Generated automatically by nManager V4.2 
// History       : huawei 2018/08/16 12:20:32 Create file
// ******************************************************************************

#ifndef __TS_SYSCTRL_REG_OFFSET_H__
#define __TS_SYSCTRL_REG_OFFSET_H__

/* TS_SYSCTRL Base address of Module's Register */
#define SOC_TS_SYSCTRL_BASE                       (0xaf000000)

/******************************************************************************/
/*                      SOC TS_SYSCTRL Registers' Definitions                            */
/******************************************************************************/

#define SOC_TS_SYSCTRL_SC_CTRL_REG      (SOC_TS_SYSCTRL_BASE + 0x0)   /* Reserved */
#define SOC_TS_SYSCTRL_SC_SYSSTAT0_REG  (SOC_TS_SYSCTRL_BASE + 0x8)   /* 保留。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT1_REG  (SOC_TS_SYSCTRL_BASE + 0xC)   /* 保留。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT2_REG  (SOC_TS_SYSCTRL_BASE + 0x10)  /* AXI总线deadlock DFX寄存器。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT3_REG  (SOC_TS_SYSCTRL_BASE + 0x14)  /* AXI总线deadlock 端口状态寄存器。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT4_REG  (SOC_TS_SYSCTRL_BASE + 0x18)  /* TS CPU状态指示。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT5_REG  (SOC_TS_SYSCTRL_BASE + 0x1C)  /* 保留。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT6_REG  (SOC_TS_SYSCTRL_BASE + 0x20)  /* TSCPU状态寄存器0。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT7_REG  (SOC_TS_SYSCTRL_BASE + 0x24)  /* TSCPU状态寄存器1。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT8_REG  (SOC_TS_SYSCTRL_BASE + 0x28)  /* TSCPU状态寄存器2。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT9_REG  (SOC_TS_SYSCTRL_BASE + 0x2C)  /* TSCPU状态寄存器3。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT10_REG (SOC_TS_SYSCTRL_BASE + 0x30)  /* 保留。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT11_REG (SOC_TS_SYSCTRL_BASE + 0x34)  /* 保留。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT12_REG (SOC_TS_SYSCTRL_BASE + 0x38)  /* TSCPU状态寄存器4。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT13_REG (SOC_TS_SYSCTRL_BASE + 0x3C)  /* TSCPU状态寄存器5。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT14_REG (SOC_TS_SYSCTRL_BASE + 0x40)  /* TSCPU状态寄存器6。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT15_REG (SOC_TS_SYSCTRL_BASE + 0x44)  /* TSCPU状态寄存器7。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT16_REG (SOC_TS_SYSCTRL_BASE + 0x48)  /* TSCPU状态寄存器8。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT17_REG (SOC_TS_SYSCTRL_BASE + 0x4C)  /* TSCPU状态寄存器9。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT18_REG (SOC_TS_SYSCTRL_BASE + 0x50)  /* TSCPU状态寄存器10。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT19_REG (SOC_TS_SYSCTRL_BASE + 0x54)  /* TSCPU状态寄存器11。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT20_REG (SOC_TS_SYSCTRL_BASE + 0x58)  /* TSCPU状态寄存器12。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT21_REG (SOC_TS_SYSCTRL_BASE + 0x5C)  /* TSCPU状态寄存器13。 */
#define SOC_TS_SYSCTRL_SC_SYSSTAT22_REG (SOC_TS_SYSCTRL_BASE + 0x60)  /* TSCPU状态寄存器14。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL0_REG  (SOC_TS_SYSCTRL_BASE + 0x9C)  /* CPU控制寄存器0。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL1_REG  (SOC_TS_SYSCTRL_BASE + 0xA0)  /* CPU控制寄存器1。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL2_REG  (SOC_TS_SYSCTRL_BASE + 0xA4)  /* TS 特殊功能控制寄存器2。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL3_REG  (SOC_TS_SYSCTRL_BASE + 0xA8)  /* TS CRG中idle自动降频控制（仅在mini使用）。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL4_REG  (SOC_TS_SYSCTRL_BASE + 0xAC)  /* TS AXI BUS硬件自动门控使能寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL5_REG  (SOC_TS_SYSCTRL_BASE + 0xB0)  /* TS AXI总线挂死状态清除寄存器 */
#define SOC_TS_SYSCTRL_PERIPHCTRL6_REG  (SOC_TS_SYSCTRL_BASE + 0xB4)  /* TS控制寄存器6。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL7_REG  (SOC_TS_SYSCTRL_BASE + 0xB8)  /* TS控制寄存器7。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL8_REG  (SOC_TS_SYSCTRL_BASE + 0xBC)  /* CPU时钟门控使能寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL9_REG  (SOC_TS_SYSCTRL_BASE + 0xC0)  /* CPU时钟门控禁止寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL10_REG (SOC_TS_SYSCTRL_BASE + 0xC4)  /* CPU时钟门控状态寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL11_REG (SOC_TS_SYSCTRL_BASE + 0xC8)  /* CPU软复位使能寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL12_REG (SOC_TS_SYSCTRL_BASE + 0xCC)  /* CPU软复位撤离寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL13_REG (SOC_TS_SYSCTRL_BASE + 0xD0)  /* CPU软复位状态寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL14_REG (SOC_TS_SYSCTRL_BASE + 0xD4)  /* TS内部的QOS配置寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL15_REG (SOC_TS_SYSCTRL_BASE + 0xD8)  /* TS控制寄存器15。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL16_REG (SOC_TS_SYSCTRL_BASE + 0xDC)  /* 保留。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL17_REG (SOC_TS_SYSCTRL_BASE + 0xE0)  /* TS DOORBELL MEM控制寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL18_REG (SOC_TS_SYSCTRL_BASE + 0xE4)  /* TS SRAM MEM控制寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL19_REG (SOC_TS_SYSCTRL_BASE + 0xE8)  /* TS AXI BUS总线优先级控制寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL20_REG (SOC_TS_SYSCTRL_BASE + 0xEC)  /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL21_REG (SOC_TS_SYSCTRL_BASE + 0xF0)  /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL22_REG (SOC_TS_SYSCTRL_BASE + 0xF4)  /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL23_REG (SOC_TS_SYSCTRL_BASE + 0xF8)  /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL24_REG (SOC_TS_SYSCTRL_BASE + 0xFC)  /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL25_REG (SOC_TS_SYSCTRL_BASE + 0x100) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL26_REG (SOC_TS_SYSCTRL_BASE + 0x104) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL27_REG (SOC_TS_SYSCTRL_BASE + 0x108) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL28_REG (SOC_TS_SYSCTRL_BASE + 0x10C) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL29_REG (SOC_TS_SYSCTRL_BASE + 0x110) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL30_REG (SOC_TS_SYSCTRL_BASE + 0x114) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL31_REG (SOC_TS_SYSCTRL_BASE + 0x118) /* CPU MEM控制信号。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL32_REG (SOC_TS_SYSCTRL_BASE + 0x11C) /* TS地址保护寄存器 */
#define SOC_TS_SYSCTRL_PERIPHCTRL33_REG (SOC_TS_SYSCTRL_BASE + 0x120) /* 保留。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL34_REG (SOC_TS_SYSCTRL_BASE + 0x124) /* 保留。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL35_REG (SOC_TS_SYSCTRL_BASE + 0x128) /* TS内部模块时钟门控使能寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL36_REG (SOC_TS_SYSCTRL_BASE + 0x12C) /* TS内部模块时钟门控禁止寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL37_REG (SOC_TS_SYSCTRL_BASE + 0x130) /* TS内部模块时钟门控状态寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL38_REG (SOC_TS_SYSCTRL_BASE + 0x134) /* TS内部模块软复位使能寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL39_REG (SOC_TS_SYSCTRL_BASE + 0x138) /* TS内部模块软复位撤离寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL40_REG (SOC_TS_SYSCTRL_BASE + 0x13C) /* TS内部模块软复位状态寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL41_REG (SOC_TS_SYSCTRL_BASE + 0x140) /* TS AXI对外总线的AWUSER控制信号的比特位31:0寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL42_REG (SOC_TS_SYSCTRL_BASE + 0x144) /* TS AXI对外总线的AWUSER控制信号的比特位63:32寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL43_REG (SOC_TS_SYSCTRL_BASE + 0x148) /* TS AXI对外总线的AWUSER控制信号的比特位67:64寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL44_REG (SOC_TS_SYSCTRL_BASE + 0x14C) /* TS AXI对外总线的ARUSER控制信号的比特位31:0寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL45_REG (SOC_TS_SYSCTRL_BASE + 0x150) /* TS AXI对外总线的ARUSER控制信号的比特位63:32寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL46_REG (SOC_TS_SYSCTRL_BASE + 0x154) /* TS AXI对外总线的ARUSER控制信号的比特位67:64寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL47_REG (SOC_TS_SYSCTRL_BASE + 0x158) /* 保留。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL48_REG (SOC_TS_SYSCTRL_BASE + 0x15C) /* TS内部的HINT_SYSCACHE配置寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL49_REG (SOC_TS_SYSCTRL_BASE + 0x160) /* TS DPM的监测配置寄存器。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL50_REG (SOC_TS_SYSCTRL_BASE + 0x164) /* TSCPU控制寄存器0。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL52_REG (SOC_TS_SYSCTRL_BASE + 0x16C) /* TSCPU控制寄存器2。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL53_REG (SOC_TS_SYSCTRL_BASE + 0x170) /* TSCPU控制寄存器3。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL55_REG (SOC_TS_SYSCTRL_BASE + 0x178) /* TSCPU控制寄存器5。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL57_REG (SOC_TS_SYSCTRL_BASE + 0x180) /* TSCPU控制寄存器7。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL58_REG (SOC_TS_SYSCTRL_BASE + 0x184) /* TSCPU控制寄存器8。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL59_REG (SOC_TS_SYSCTRL_BASE + 0x188) /* TSCPU控制寄存器9。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL60_REG (SOC_TS_SYSCTRL_BASE + 0x18C) /* TSCPU控制寄存器10。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL61_REG (SOC_TS_SYSCTRL_BASE + 0x190) /* TSCPU控制寄存器11。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL62_REG (SOC_TS_SYSCTRL_BASE + 0x194) /* TSCPU控制寄存器12。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL63_REG (SOC_TS_SYSCTRL_BASE + 0x198) /* TSCPU控制寄存器13。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL64_REG (SOC_TS_SYSCTRL_BASE + 0x19C) /* TSCPU控制寄存器14。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL65_REG (SOC_TS_SYSCTRL_BASE + 0x1A0) /* TSCPU控制寄存器15。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL66_REG (SOC_TS_SYSCTRL_BASE + 0x1A4) /* CPU0启动相关配置寄存器0。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL67_REG (SOC_TS_SYSCTRL_BASE + 0x1A8) /* CPU0启动相关配置寄存器1。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL68_REG (SOC_TS_SYSCTRL_BASE + 0x1AC) /* CPU1启动相关配置寄存器0。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL69_REG (SOC_TS_SYSCTRL_BASE + 0x1B0) /* CPU1启动相关配置寄存器1。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL70_REG (SOC_TS_SYSCTRL_BASE + 0x1B4) /* CPU2启动相关配置寄存器0。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL71_REG (SOC_TS_SYSCTRL_BASE + 0x1B8) /* CPU2启动相关配置寄存器1。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL72_REG (SOC_TS_SYSCTRL_BASE + 0x1BC) /* CPU3启动相关配置寄存器0。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL73_REG (SOC_TS_SYSCTRL_BASE + 0x1C0) /* CPU3启动相关配置寄存器1。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL74_REG (SOC_TS_SYSCTRL_BASE + 0x1C4) /* TS控制寄存器74。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL75_REG (SOC_TS_SYSCTRL_BASE + 0x1C8) /* TS控制寄存器75。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL76_REG (SOC_TS_SYSCTRL_BASE + 0x1CC) /* TS控制寄存器76。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL77_REG (SOC_TS_SYSCTRL_BASE + 0x1D0) /* TS控制寄存器77。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL78_REG (SOC_TS_SYSCTRL_BASE + 0x1D4) /* TS控制寄存器78。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL79_REG (SOC_TS_SYSCTRL_BASE + 0x1D8) /* TS控制寄存器79。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL80_REG  (SOC_TS_SYSCTRL_BASE + 0x1DC) /* TS控制寄存器80。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL81_REG  (SOC_TS_SYSCTRL_BASE + 0x1E0) /* TS控制寄存器81。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL82_REG  (SOC_TS_SYSCTRL_BASE + 0x1E4) /* TS控制寄存器82。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL83_REG  (SOC_TS_SYSCTRL_BASE + 0x1E8) /* TS控制寄存器83。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL84_REG  (SOC_TS_SYSCTRL_BASE + 0x1EC) /* TS控制寄存器84。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL85_REG  (SOC_TS_SYSCTRL_BASE + 0x1F0) /* TS控制寄存器85。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL86_REG  (SOC_TS_SYSCTRL_BASE + 0x1F4) /* TS控制寄存器86。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL87_REG  (SOC_TS_SYSCTRL_BASE + 0x1F8) /* TS控制寄存器87。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL88_REG  (SOC_TS_SYSCTRL_BASE + 0x1FC) /* TS控制寄存器88。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL89_REG  (SOC_TS_SYSCTRL_BASE + 0x200) /* TS控制寄存器89。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL90_REG  (SOC_TS_SYSCTRL_BASE + 0x204) /* TS控制寄存器90。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL91_REG  (SOC_TS_SYSCTRL_BASE + 0x208) /* TS控制寄存器91。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL92_REG  (SOC_TS_SYSCTRL_BASE + 0x20C) /* TS控制寄存器92。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL93_REG  (SOC_TS_SYSCTRL_BASE + 0x210) /* TS控制寄存器93。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL94_REG  (SOC_TS_SYSCTRL_BASE + 0x214) /* TS控制寄存器94。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL95_REG  (SOC_TS_SYSCTRL_BASE + 0x218) /* TS控制寄存器95。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL96_REG  (SOC_TS_SYSCTRL_BASE + 0x21C) /* TS控制寄存器96。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL97_REG  (SOC_TS_SYSCTRL_BASE + 0x220) /* TS控制寄存器97。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL98_REG  (SOC_TS_SYSCTRL_BASE + 0x224) /* TS控制寄存器98。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL99_REG  (SOC_TS_SYSCTRL_BASE + 0x228) /* TS控制寄存器99。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL100_REG (SOC_TS_SYSCTRL_BASE + 0x22C) /* TS控制寄存器100。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL101_REG (SOC_TS_SYSCTRL_BASE + 0x230) /* TS控制寄存器101。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL102_REG (SOC_TS_SYSCTRL_BASE + 0x234) /* TS控制寄存器102。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL103_REG (SOC_TS_SYSCTRL_BASE + 0x238) /* TS控制寄存器103。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL104_REG (SOC_TS_SYSCTRL_BASE + 0x23C) /* TS控制寄存器104。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL105_REG (SOC_TS_SYSCTRL_BASE + 0x240) /* TS控制寄存器105。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL106_REG (SOC_TS_SYSCTRL_BASE + 0x244) /* TS控制寄存器106。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL107_REG (SOC_TS_SYSCTRL_BASE + 0x248) /* TS控制寄存器107。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL108_REG (SOC_TS_SYSCTRL_BASE + 0x24C) /* TS控制寄存器108。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL109_REG (SOC_TS_SYSCTRL_BASE + 0x250) /* TS控制寄存器109。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL110_REG (SOC_TS_SYSCTRL_BASE + 0x254) /* TS控制寄存器110。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL111_REG (SOC_TS_SYSCTRL_BASE + 0x258) /* TS控制寄存器111。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL112_REG (SOC_TS_SYSCTRL_BASE + 0x25C) /* TS控制寄存器112。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL113_REG (SOC_TS_SYSCTRL_BASE + 0x260) /* TS控制寄存器113。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL114_REG (SOC_TS_SYSCTRL_BASE + 0x264) /* TS控制寄存器114。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL115_REG (SOC_TS_SYSCTRL_BASE + 0x268) /* TS控制寄存器115。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL116_REG (SOC_TS_SYSCTRL_BASE + 0x26C) /* TS控制寄存器116。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL117_REG (SOC_TS_SYSCTRL_BASE + 0x270) /* TS控制寄存器117。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL118_REG (SOC_TS_SYSCTRL_BASE + 0x274) /* TS控制寄存器118。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL119_REG (SOC_TS_SYSCTRL_BASE + 0x278) /* TS控制寄存器119。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL120_REG (SOC_TS_SYSCTRL_BASE + 0x27C) /* TS控制寄存器120。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL121_REG (SOC_TS_SYSCTRL_BASE + 0x280) /* TS控制寄存器121。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL122_REG (SOC_TS_SYSCTRL_BASE + 0x284) /* TS控制寄存器122。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL123_REG (SOC_TS_SYSCTRL_BASE + 0x288) /* TS控制寄存器123。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL124_REG (SOC_TS_SYSCTRL_BASE + 0x28C) /* TS控制寄存器124。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL125_REG (SOC_TS_SYSCTRL_BASE + 0x290) /* TS控制寄存器125。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL126_REG (SOC_TS_SYSCTRL_BASE + 0x294) /* TS控制寄存器126。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL127_REG (SOC_TS_SYSCTRL_BASE + 0x298) /* TS控制寄存器127。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL128_REG (SOC_TS_SYSCTRL_BASE + 0x29C) /* TS控制寄存器128。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL129_REG (SOC_TS_SYSCTRL_BASE + 0x2A0) /* TS控制寄存器129。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL130_REG (SOC_TS_SYSCTRL_BASE + 0x2A4) /* TS控制寄存器130。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL131_REG (SOC_TS_SYSCTRL_BASE + 0x2A8) /* TS控制寄存器131。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL132_REG (SOC_TS_SYSCTRL_BASE + 0x2AC) /* TS控制寄存器132。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL133_REG (SOC_TS_SYSCTRL_BASE + 0x2B0) /* TS控制寄存器133。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL134_REG (SOC_TS_SYSCTRL_BASE + 0x2B4) /* TS控制寄存器134。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL135_REG (SOC_TS_SYSCTRL_BASE + 0x2B8) /* TS控制寄存器135。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL136_REG (SOC_TS_SYSCTRL_BASE + 0x2BC) /* TS控制寄存器136。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL137_REG (SOC_TS_SYSCTRL_BASE + 0x2C0) /* TS控制寄存器137。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL138_REG (SOC_TS_SYSCTRL_BASE + 0x2C4) /* TS控制寄存器138。 */
#define SOC_TS_SYSCTRL_PERIPHCTRL139_REG (SOC_TS_SYSCTRL_BASE + 0x2C8) /* TS控制寄存器139。 */
#define SOC_TS_SYSCTRL_SC_INTREG0_REG   (SOC_TS_SYSCTRL_BASE + 0xA00) /* 软件中断寄存器0。 */
#define SOC_TS_SYSCTRL_SC_INTREG1_REG   (SOC_TS_SYSCTRL_BASE + 0xA04) /* 软件中断寄存器1。 */
#define SOC_TS_SYSCTRL_SC_INTREG2_REG   (SOC_TS_SYSCTRL_BASE + 0xA08) /* 软件中断寄存器2。 */
#define SOC_TS_SYSCTRL_SC_INTREG3_REG   (SOC_TS_SYSCTRL_BASE + 0xA0C) /* 软件中断寄存器3。 */
#define SOC_TS_SYSCTRL_SC_INTREG4_REG   (SOC_TS_SYSCTRL_BASE + 0xA10) /* 软件中断寄存器4。 */
#define SOC_TS_SYSCTRL_SC_INTREG5_REG   (SOC_TS_SYSCTRL_BASE + 0xA14) /* 软件中断寄存器5。 */
#define SOC_TS_SYSCTRL_SC_INTREG6_REG   (SOC_TS_SYSCTRL_BASE + 0xA18) /* 软件中断寄存器6。 */
#define SOC_TS_SYSCTRL_SC_INTREG7_REG   (SOC_TS_SYSCTRL_BASE + 0xA1C) /* 软件中断寄存器7。 */
#define SOC_TS_SYSCTRL_SC_INTREG8_REG   (SOC_TS_SYSCTRL_BASE + 0xA20) /* 软件中断寄存器8。 */
#define SOC_TS_SYSCTRL_SC_INTREG9_REG   (SOC_TS_SYSCTRL_BASE + 0xA24) /* 软件中断寄存器9。 */
#define SOC_TS_SYSCTRL_SC_INTREG10_REG  (SOC_TS_SYSCTRL_BASE + 0xA28) /* 软件中断寄存器10。 */
#define SOC_TS_SYSCTRL_SC_INTREG11_REG  (SOC_TS_SYSCTRL_BASE + 0xA2C) /* 软件中断寄存器11。 */
#define SOC_TS_SYSCTRL_SC_INTREG12_REG  (SOC_TS_SYSCTRL_BASE + 0xA30) /* 软件中断寄存器12。 */
#define SOC_TS_SYSCTRL_SC_INTREG13_REG  (SOC_TS_SYSCTRL_BASE + 0xA34) /* 软件中断寄存器13。 */
#define SOC_TS_SYSCTRL_SC_INTREG14_REG  (SOC_TS_SYSCTRL_BASE + 0xA38) /* 软件中断寄存器14。 */
#define SOC_TS_SYSCTRL_SC_INTREG15_REG  (SOC_TS_SYSCTRL_BASE + 0xA3C) /* 软件中断寄存器15。 */
#define SOC_TS_SYSCTRL_SC_INTREG16_REG  (SOC_TS_SYSCTRL_BASE + 0xA40) /* 软件中断寄存器16。 */
#define SOC_TS_SYSCTRL_SC_INTREG17_REG  (SOC_TS_SYSCTRL_BASE + 0xA44) /* 软件中断寄存器17。 */
#define SOC_TS_SYSCTRL_SC_INTREG18_REG  (SOC_TS_SYSCTRL_BASE + 0xA48) /* 软件中断寄存器18。 */
#define SOC_TS_SYSCTRL_SC_INTREG19_REG  (SOC_TS_SYSCTRL_BASE + 0xA4C) /* 软件中断寄存器19。 */
#define SOC_TS_SYSCTRL_SC_INTREG20_REG  (SOC_TS_SYSCTRL_BASE + 0xA50) /* 软件中断寄存器20。 */
#define SOC_TS_SYSCTRL_SC_INTREG21_REG  (SOC_TS_SYSCTRL_BASE + 0xA54) /* 软件中断寄存器21。 */
#define SOC_TS_SYSCTRL_SC_INTREG22_REG  (SOC_TS_SYSCTRL_BASE + 0xA58) /* 软件中断寄存器22。 */
#define SOC_TS_SYSCTRL_SC_INTREG23_REG  (SOC_TS_SYSCTRL_BASE + 0xA5C) /* 软件中断寄存器23。 */
#define SOC_TS_SYSCTRL_SC_INTREG24_REG  (SOC_TS_SYSCTRL_BASE + 0xA60) /* 软件中断寄存器24。 */
#define SOC_TS_SYSCTRL_SC_INTREG25_REG  (SOC_TS_SYSCTRL_BASE + 0xA64) /* 软件中断寄存器25。 */
#define SOC_TS_SYSCTRL_SC_INTREG26_REG  (SOC_TS_SYSCTRL_BASE + 0xA68) /* 软件中断寄存器26。 */
#define SOC_TS_SYSCTRL_SC_INTREG27_REG  (SOC_TS_SYSCTRL_BASE + 0xA6C) /* 软件中断寄存器27。 */
#define SOC_TS_SYSCTRL_SC_INTREG28_REG  (SOC_TS_SYSCTRL_BASE + 0xA70) /* 软件中断寄存器28。 */
#define SOC_TS_SYSCTRL_SC_INTREG29_REG  (SOC_TS_SYSCTRL_BASE + 0xA74) /* 软件中断寄存器29。 */
#define SOC_TS_SYSCTRL_SC_INTREG30_REG  (SOC_TS_SYSCTRL_BASE + 0xA78) /* 软件中断寄存器30。 */
#define SOC_TS_SYSCTRL_SC_INTREG31_REG  (SOC_TS_SYSCTRL_BASE + 0xA7C) /* 软件中断寄存器31。 */
#define SOC_TS_SYSCTRL_SC_TESTREG0_REG  (SOC_TS_SYSCTRL_BASE + 0xBE0) /* 软件测试寄存器0。 */
#define SOC_TS_SYSCTRL_SC_TESTREG1_REG  (SOC_TS_SYSCTRL_BASE + 0xBE4) /* 软件测试寄存器1。 */
#define SOC_TS_SYSCTRL_SC_TESTREG2_REG  (SOC_TS_SYSCTRL_BASE + 0xBE8) /* 软件测试寄存器2。 */
#define SOC_TS_SYSCTRL_SC_TESTREG3_REG  (SOC_TS_SYSCTRL_BASE + 0xBEC) /* 软件测试寄存器3。 */
#define SOC_TS_SYSCTRL_SC_TESTREG4_REG  (SOC_TS_SYSCTRL_BASE + 0xBF0) /* 软件测试寄存器4。 */
#define SOC_TS_SYSCTRL_SC_TESTREG5_REG  (SOC_TS_SYSCTRL_BASE + 0xBF4) /* 软件测试寄存器5。 */
#define SOC_TS_SYSCTRL_SC_TESTREG6_REG  (SOC_TS_SYSCTRL_BASE + 0xBF8) /* 软件测试寄存器6。 */
#define SOC_TS_SYSCTRL_SC_TESTREG7_REG  (SOC_TS_SYSCTRL_BASE + 0xBFC) /* 软件测试寄存器7。 */
#define SOC_TS_SYSCTRL_SC_TESTREG8_REG  (SOC_TS_SYSCTRL_BASE + 0xC00) /* 软件测试寄存器8。 */
#define SOC_TS_SYSCTRL_SC_TESTREG9_REG  (SOC_TS_SYSCTRL_BASE + 0xC04) /* 软件测试寄存器9。 */
#define SOC_TS_SYSCTRL_SC_TESTREG10_REG (SOC_TS_SYSCTRL_BASE + 0xC08) /* 软件测试寄存器10。 */
#define SOC_TS_SYSCTRL_SC_TESTREG11_REG (SOC_TS_SYSCTRL_BASE + 0xC0C) /* 软件测试寄存器11。 */
#define SOC_TS_SYSCTRL_SC_TESTREG12_REG (SOC_TS_SYSCTRL_BASE + 0xC10) /* 软件测试寄存器12。 */
#define SOC_TS_SYSCTRL_SC_TESTREG13_REG (SOC_TS_SYSCTRL_BASE + 0xC14) /* 软件测试寄存器13。 */
#define SOC_TS_SYSCTRL_SC_TESTREG14_REG (SOC_TS_SYSCTRL_BASE + 0xC18) /* 软件测试寄存器14。 */
#define SOC_TS_SYSCTRL_SC_TESTREG15_REG (SOC_TS_SYSCTRL_BASE + 0xC1C) /* 软件测试寄存器15。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG0_REG  (SOC_TS_SYSCTRL_BASE + 0xC20) /* 硬件信号量寄存器0。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG1_REG  (SOC_TS_SYSCTRL_BASE + 0xC24) /* 硬件信号量寄存器1。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG2_REG  (SOC_TS_SYSCTRL_BASE + 0xC28) /* 硬件信号量寄存器2。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG3_REG  (SOC_TS_SYSCTRL_BASE + 0xC2C) /* 硬件信号量寄存器3。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG4_REG  (SOC_TS_SYSCTRL_BASE + 0xC30) /* 硬件信号量寄存器4。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG5_REG  (SOC_TS_SYSCTRL_BASE + 0xC34) /* 硬件信号量寄存器5。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG6_REG  (SOC_TS_SYSCTRL_BASE + 0xC38) /* 硬件信号量寄存器6。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG7_REG  (SOC_TS_SYSCTRL_BASE + 0xC3C) /* 硬件信号量寄存器7。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG8_REG  (SOC_TS_SYSCTRL_BASE + 0xC40) /* 硬件信号量寄存器8。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG9_REG  (SOC_TS_SYSCTRL_BASE + 0xC44) /* 硬件信号量寄存器9。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG10_REG (SOC_TS_SYSCTRL_BASE + 0xC48) /* 硬件信号量寄存器10。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG11_REG (SOC_TS_SYSCTRL_BASE + 0xC4C) /* 硬件信号量寄存器11。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG12_REG (SOC_TS_SYSCTRL_BASE + 0xC50) /* 硬件信号量寄存器12。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG13_REG (SOC_TS_SYSCTRL_BASE + 0xC54) /* 硬件信号量寄存器13。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG14_REG (SOC_TS_SYSCTRL_BASE + 0xC58) /* 硬件信号量寄存器14。 */
#define SOC_TS_SYSCTRL_SC_SEMAREG15_REG (SOC_TS_SYSCTRL_BASE + 0xC5C) /* 硬件信号量寄存器15。 */
#define SOC_TS_SYSCTRL_SC_TESTREG16_REG (SOC_TS_SYSCTRL_BASE + 0xC60) /* 软件测试寄存器16。 */
#define SOC_TS_SYSCTRL_SC_TESTREG17_REG (SOC_TS_SYSCTRL_BASE + 0xC64) /* 软件测试寄存器17。 */
#define SOC_TS_SYSCTRL_SCPROTREG_REG    (SOC_TS_SYSCTRL_BASE + 0xC68) /* TS复位保护寄存器。 */

#endif // __TS_SYSCTRL_REG_OFFSET_H__
